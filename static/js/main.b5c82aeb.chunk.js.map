{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","query","setQuery","name","species","img","hp","attack","defense","type","pokemon","setPokemon","chosen","setChosen","flip","setFlip","onClick","className","onChange","e","target","value","placeholder","axios","get","then","response","data","sprites","front_default","stats","base_stat","types","isFlipped","flipDirection","src","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQA4DeA,MAvDf,WACE,MAAuBC,mBAAS,IAAhC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA2BF,mBAAS,CAACG,KAAK,GAAGC,QAAQ,GAAGC,IAAI,GAAGC,GAAG,GAAGC,OAAO,GAAGC,QAAQ,GAAGC,KAAK,KAA/F,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAyBX,oBAAS,GAAlC,mBAAOY,EAAP,KAAcC,EAAd,KACA,EAAqBb,oBAAS,GAA9B,mBAAOc,EAAP,KAAYC,EAAZ,KACMC,EAAS,WAEbD,GAASD,IAiBX,OACE,sBAAKG,UAAU,MAAf,UACE,sBAAKA,UAAU,SAAf,UACA,0DACA,uBAAOR,KAAK,OAAOS,SAAU,SAACC,GAAD,OAAKjB,EAASiB,EAAEC,OAAOC,QAAQC,YAAY,uBACxE,wBAAQN,QApBC,WACC,KAARf,GAEAsB,IAAMC,IAAN,4CAA+CvB,IAASwB,MAC3D,SAACC,GAEMf,EAAW,CAACR,KAAKF,EAAMG,QAAQsB,EAASC,KAAKvB,QAAQD,KAAKE,IAAIqB,EAASC,KAAKC,QAAQC,cAAcvB,GAAGoB,EAASC,KAAKG,MAAM,GAAGC,UAC1HxB,OAAOmB,EAASC,KAAKG,MAAM,GAAGC,UAAUvB,QAAQkB,EAASC,KAAKG,MAAM,GAAGC,UAAUtB,KAAKiB,EAASC,KAAKK,MAAM,GAAGvB,KAAKN,OAE1HU,GAAU,GACVE,GAAQ,OAUR,uBAEA,qBAAKE,UAAU,UAAf,SAEKL,EACC,eAAC,IAAD,CAAeqB,UAAWnB,EAAMoB,cAAc,WAA9C,UACE,sBAAKjB,UAAU,QAAf,UACI,qBAAKkB,IAAKzB,EAAQL,IAAK+B,IAAK1B,EAAQP,OACpC,6BAAKO,EAAQP,OACb,wBAAQa,QAASA,EAAjB,yBAEJ,sBAAKC,UAAU,OAAOD,QAASA,EAA/B,UACI,6BAAKN,EAAQP,OACb,0CAAaO,EAAQN,WACrB,qCAAQM,EAAQJ,MAChB,0CAAaI,EAAQH,UACrB,2CAAcG,EAAQF,WACtB,wCAAWE,EAAQD,cAbhB,qBAAKQ,UAAU,QAAf,SAAuB,uEC1B7BoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b5c82aeb.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport ReactCardFlip from 'react-card-flip';\n\nfunction App(){\n  const [query,setQuery]=useState(\"\");\n  const [pokemon,setPokemon]=useState({name:\"\",species:\"\",img:\"\",hp:\"\",attack:\"\",defense:\"\",type:\"\"});\n  const [chosen,setChosen]=useState(false);\n  const [flip,setFlip]=useState(false);\n  const onClick= ()=>\n  {\n    setFlip(!flip);\n  }\n  const search=()=>{\n    if (query!==''){\n      \n        axios.get(`https://pokeapi.co/api/v2/pokemon/${query}`).then\n    ((response)=>{\n          \n            setPokemon({name:query,species:response.data.species.name,img:response.data.sprites.front_default,hp:response.data.stats[0].base_stat,\n              attack:response.data.stats[1].base_stat,defense:response.data.stats[2].base_stat,type:response.data.types[0].type.name}) ;\n         \n      setChosen(true);\n      setFlip(false);\n    })\n    \n      }\n  }\n  return(\n    <div className=\"App\">\n      <div className=\"header\">\n      <h1>Welcome To Pokemon World</h1>\n      <input type=\"text\" onChange={(e)=>setQuery(e.target.value)} placeholder=\"Enter your pokemon\"/>\n      <button onClick={search}>Search</button>\n      </div>\n      <div className=\"display\">\n        {\n          !chosen ? (<div className=\"entry\"><h1>Search Your Favourite Pokemon</h1></div>) :\n          ( <ReactCardFlip isFlipped={flip} flipDirection=\"vertical\">\n              <div className=\"front\">\n                  <img src={pokemon.img} alt={pokemon.name}/>\n                  <h2>{pokemon.name}</h2>\n                  <button onClick={onClick}>See More</button>\n              </div>\n              <div className=\"back\" onClick={onClick}>\n                  <h3>{pokemon.name}</h3>\n                  <h3>species:{pokemon.species}</h3>\n                  <h3>Hp:{pokemon.hp}</h3>\n                  <h3>Attack: {pokemon.attack}</h3>\n                  <h3>Defense: {pokemon.defense}</h3>\n                  <h3>Type: {pokemon.type}</h3>\n              </div>\n          </ReactCardFlip>)\n        }\n        </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}